#include <bits/stdc++.h>
using namespace std;

int palindromePartitioning(string str) {
    int n = str.size();
    vector<vector<bool>> isPal(n, vector<bool>(n, false));
    vector<int> dp(n + 1, 0);

    for (int i = 0; i < n; i++) {
        isPal[i][i] = true;
    }

    for (int len = 2; len <= n; len++) {
        for (int i = 0; i <= n - len; i++) {
            int j = i + len - 1;
            if (str[i] == str[j] && (len == 2 || isPal[i + 1][j - 1])) {
                isPal[i][j] = true;
            }
        }
    }

    for (int i = n - 1; i >= 0; i--) {
        int mini = INT_MAX;
        for (int k = i; k < n; k++) {
            if (isPal[i][k]) {
                mini = min(mini, 1 + dp[k + 1]);
            }
        }
        dp[i] = mini;
    }

    return dp[0] - 1;

}
